"use strict";(self.webpackChunkwhaletui_docs=self.webpackChunkwhaletui_docs||[]).push([[8],{4696:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"development/coding-standards","title":"Coding Standards","description":"Development guidelines and coding standards for WhaleTUI contributors","source":"@site/docs/development/coding-standards.md","sourceDirName":"development","slug":"/development/coding-standards","permalink":"/whaletui/docs/development/coding-standards","draft":false,"unlisted":false,"editUrl":"https://github.com/wikczerski/whaletui/edit/main/docs/docs/development/coding-standards.md","tags":[],"version":"current","frontMatter":{"id":"coding-standards","title":"Coding Standards","sidebar_label":"Coding Standards","description":"Development guidelines and coding standards for WhaleTUI contributors"},"sidebar":"docs","previous":{"title":"Development Setup","permalink":"/whaletui/docs/development/setup"}}');var r=i(4848),t=i(8453);const l={id:"coding-standards",title:"Coding Standards",sidebar_label:"Coding Standards",description:"Development guidelines and coding standards for WhaleTUI contributors"},a="Coding Standards",o={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"General Principles",id:"general-principles",level:2},{value:"DRY (Don&#39;t Repeat Yourself)",id:"dry-dont-repeat-yourself",level:3},{value:"KISS (Keep It Simple, Stupid)",id:"kiss-keep-it-simple-stupid",level:3},{value:"Single Responsibility",id:"single-responsibility",level:3},{value:"Go Language Standards",id:"go-language-standards",level:2},{value:"Code Formatting",id:"code-formatting",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Logging",id:"logging",level:3},{value:"Code Structure",id:"code-structure",level:2},{value:"File Organization",id:"file-organization",level:3},{value:"Function Design",id:"function-design",level:3},{value:"Variable Declaration",id:"variable-declaration",level:3},{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"Packages",id:"packages",level:3},{value:"Functions and Methods",id:"functions-and-methods",level:3},{value:"Variables and Constants",id:"variables-and-constants",level:3},{value:"Documentation",id:"documentation",level:2},{value:"Code Comments",id:"code-comments",level:3},{value:"Function Documentation",id:"function-documentation",level:3},{value:"Testing",id:"testing",level:2},{value:"Test Structure",id:"test-structure",level:3},{value:"Mocking",id:"mocking",level:3},{value:"Error Handling",id:"error-handling-1",level:2},{value:"Error Types",id:"error-types",level:3},{value:"Error Context",id:"error-context",level:3},{value:"Performance",id:"performance",level:2},{value:"Memory Management",id:"memory-management",level:3},{value:"Concurrency",id:"concurrency",level:3},{value:"Security",id:"security",level:2},{value:"Input Validation",id:"input-validation",level:3},{value:"Code Review Checklist",id:"code-review-checklist",level:2},{value:"Tools and Automation",id:"tools-and-automation",level:2},{value:"Required Tools",id:"required-tools",level:3},{value:"Pre-commit Workflow",id:"pre-commit-workflow",level:3},{value:"Getting Help",id:"getting-help",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"coding-standards",children:"Coding Standards"})}),"\n",(0,r.jsx)(n.p,{children:"This document outlines the coding standards and best practices that all WhaleTUI contributors must follow to maintain code quality and consistency."}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#general-principles",children:"General Principles"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#go-language-standards",children:"Go Language Standards"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#code-structure",children:"Code Structure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#naming-conventions",children:"Naming Conventions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#documentation",children:"Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#testing",children:"Testing"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#error-handling",children:"Error Handling"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#performance",children:"Performance"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#security",children:"Security"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"general-principles",children:"General Principles"}),"\n",(0,r.jsx)(n.h3,{id:"dry-dont-repeat-yourself",children:"DRY (Don't Repeat Yourself)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Avoid code duplication"}),"\n",(0,r.jsx)(n.li,{children:"Extract common functionality into reusable functions"}),"\n",(0,r.jsx)(n.li,{children:"Use interfaces and abstractions appropriately"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"kiss-keep-it-simple-stupid",children:"KISS (Keep It Simple, Stupid)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Prefer simple solutions over complex ones"}),"\n",(0,r.jsx)(n.li,{children:"Reduce complexity wherever possible"}),"\n",(0,r.jsx)(n.li,{children:"Write code that's easy to understand and maintain"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"single-responsibility",children:"Single Responsibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each function should do one thing well"}),"\n",(0,r.jsx)(n.li,{children:"Classes should have a single, clear purpose"}),"\n",(0,r.jsx)(n.li,{children:"Keep functions small and focused"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"go-language-standards",children:"Go Language Standards"}),"\n",(0,r.jsx)(n.h3,{id:"code-formatting",children:"Code Formatting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"gofumpt"})," for automatic formatting (via ",(0,r.jsx)(n.code,{children:"make fmt"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Follow Go's standard formatting conventions"}),"\n",(0,r.jsx)(n.li,{children:"Use 4-space indentation (tabs converted to spaces)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always check and handle errors explicitly"}),"\n",(0,r.jsx)(n.li,{children:"Use meaningful error messages"}),"\n",(0,r.jsx)(n.li,{children:"Wrap errors with context when appropriate"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"errors.Is"})," and ",(0,r.jsx)(n.code,{children:"errors.As"})," for error comparison"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// Good\nif err != nil {\n    return fmt.Errorf("failed to start container %s: %w", containerID, err)\n}\n\n// Avoid\nif err != nil {\n    return err\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use the centralized logger from ",(0,r.jsx)(n.code,{children:"internal/logger.go"})]}),"\n",(0,r.jsxs)(n.li,{children:["Never use ",(0,r.jsx)(n.code,{children:"fmt.Print*"})," methods"]}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate log levels (DEBUG, INFO, WARN, ERROR)"}),"\n",(0,r.jsx)(n.li,{children:"Include relevant context in log messages"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// Good\nlogger.Info("Container started successfully", "container_id", containerID, "image", imageName)\n\n// Avoid\nfmt.Printf("Container %s started\\n", containerID)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"code-structure",children:"Code Structure"}),"\n",(0,r.jsx)(n.h3,{id:"file-organization",children:"File Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Group related concepts vertically","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Struct -> Constructor -> Public methods -> private methods"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Keep dependent functions close together"}),"\n",(0,r.jsx)(n.li,{children:"Place functions in logical downward flow"}),"\n",(0,r.jsx)(n.li,{children:"Use whitespace to group related code"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"function-design",children:"Function Design"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep functions small (ideally under 30 lines, golangci-lint limits to 40)"}),"\n",(0,r.jsx)(n.li,{children:"Use descriptive names that explain intent"}),"\n",(0,r.jsx)(n.li,{children:"Minimize arguments (prefer structs for multiple parameters)"}),"\n",(0,r.jsx)(n.li,{children:"Avoid side effects"}),"\n",(0,r.jsx)(n.li,{children:"No flag arguments - split into separate methods"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Good\nfunc (cm *ContainerManager) StartContainer(containerID string) error {\n    // Implementation\n}\n\nfunc (cm *ContainerManager) StartContainerWithOptions(containerID string, opts ContainerOptions) error {\n    // Implementation\n}\n\n// Avoid\nfunc (cm *ContainerManager) StartContainer(containerID string, withLogs, withMetrics bool) error {\n    // Implementation\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"variable-declaration",children:"Variable Declaration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Declare variables close to their usage"}),"\n",(0,r.jsx)(n.li,{children:"Use meaningful variable names"}),"\n",(0,r.jsx)(n.li,{children:"Use constants for magic numbers"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,r.jsx)(n.h3,{id:"packages",children:"Packages"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use lowercase, single-word names"}),"\n",(0,r.jsx)(n.li,{children:"Avoid underscores or mixed caps"}),"\n",(0,r.jsx)(n.li,{children:"Use descriptive names that indicate purpose"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"functions-and-methods",children:"Functions and Methods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use camelCase"}),"\n",(0,r.jsx)(n.li,{children:"Start with a verb for actions"}),"\n",(0,r.jsx)(n.li,{children:"Be descriptive and specific"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Good\nfunc StartContainer()\nfunc GetContainerStatus()\nfunc ValidateImageName()\n\n// Avoid\nfunc Container()\nfunc Status()\nfunc Validate()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"variables-and-constants",children:"Variables and Constants"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use camelCase for variables"}),"\n",(0,r.jsx)(n.li,{children:"Use PascalCase for exported constants"}),"\n",(0,r.jsx)(n.li,{children:"Use descriptive names that explain purpose"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Good\nconst MaxRetryAttempts = 3\nconst DefaultTimeout = 30 * time.Second\n\nvar containerStatus string\nvar maxMemoryUsage int64\n\n// Avoid\nconst MAX_RETRY = 3\nconst TIMEOUT = 30\n\nvar status string\nvar mem int64\n"})}),"\n",(0,r.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsx)(n.h3,{id:"code-comments",children:"Code Comments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Explain intent, not implementation"}),"\n",(0,r.jsx)(n.li,{children:"Use comments to clarify complex logic"}),"\n",(0,r.jsx)(n.li,{children:"Avoid obvious or redundant comments"}),"\n",(0,r.jsx)(n.li,{children:"No closing brace comments"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Good\n// Retry operation up to MaxRetryAttempts times with exponential backoff\nfor attempt := 0; attempt < MaxRetryAttempts; attempt++ {\n    // Implementation\n}\n\n// Avoid\n// Loop through attempts\nfor attempt := 0; attempt < MaxRetryAttempts; attempt++ {\n    // Implementation\n} // End of loop\n"})}),"\n",(0,r.jsx)(n.h3,{id:"function-documentation",children:"Function Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Document all exported functions"}),"\n",(0,r.jsx)(n.li,{children:"Use Go's standard comment format"}),"\n",(0,r.jsx)(n.li,{children:"Include examples for complex functions"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// StartContainer starts a Docker container with the given ID.\n// Returns an error if the container cannot be started or if the\n// container ID is invalid.\n//\n// Example:\n//\n//\terr := manager.StartContainer("abc123")\n//\tif err != nil {\n//\t    log.Printf("Failed to start container: %v", err)\n//\t}\nfunc (cm *ContainerManager) StartContainer(containerID string) error {\n    // Implementation\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"test-structure",children:"Test Structure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"One assertion per test"}),"\n",(0,r.jsx)(n.li,{children:"Tests should be readable, fast, independent, and repeatable"}),"\n",(0,r.jsx)(n.li,{children:"Use descriptive test names"}),"\n",(0,r.jsx)(n.li,{children:"Group related tests together"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func TestContainerManager_StartContainer(t *testing.T) {\n    t.Run("successful start", func(t *testing.T) {\n        // Test successful case\n    })\n\n    t.Run("invalid container ID", func(t *testing.T) {\n        // Test error case\n    })\n\n    t.Run("container already running", func(t *testing.T) {\n        // Test edge case\n    })\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"mocking",children:"Mocking"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use mockery to generate mocks"}),"\n",(0,r.jsx)(n.li,{children:"Never create custom mocks manually"}),"\n",(0,r.jsx)(n.li,{children:"Use existing mocks when available"}),"\n",(0,r.jsx)(n.li,{children:"Mock external dependencies, not internal logic"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling-1",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"error-types",children:"Error Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use custom error types for specific error conditions"}),"\n",(0,r.jsxs)(n.li,{children:["Implement ",(0,r.jsx)(n.code,{children:"Error()"})," method for custom errors"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"errors.Is"})," and ",(0,r.jsx)(n.code,{children:"errors.As"})," for error handling"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'type ContainerNotFoundError struct {\n    ContainerID string\n}\n\nfunc (e ContainerNotFoundError) Error() string {\n    return fmt.Sprintf("container %s not found", e.ContainerID)\n}\n\n// Usage\nif errors.Is(err, &ContainerNotFoundError{}) {\n    // Handle container not found\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"error-context",children:"Error Context"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add context to errors when appropriate"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"fmt.Errorf"})," with ",(0,r.jsx)(n.code,{children:"%w"})," verb for wrapping"]}),"\n",(0,r.jsx)(n.li,{children:"Include relevant parameters in error messages"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance",children:"Performance"}),"\n",(0,r.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Avoid unnecessary allocations"}),"\n",(0,r.jsx)(n.li,{children:"Use object pools for frequently allocated objects"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"concurrency",children:"Concurrency"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use goroutines appropriately"}),"\n",(0,r.jsx)(n.li,{children:"Use channels for communication between goroutines"}),"\n",(0,r.jsx)(n.li,{children:"Separate multi-threading code"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security",children:"Security"}),"\n",(0,r.jsx)(n.h3,{id:"input-validation",children:"Input Validation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate all user inputs"}),"\n",(0,r.jsx)(n.li,{children:"Sanitize data before processing"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"code-review-checklist",children:"Code Review Checklist"}),"\n",(0,r.jsx)(n.p,{children:"Before submitting code for review, ensure:"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","All pre-commit checks pass"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Code follows formatting standards"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","All tests pass"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Error handling is appropriate"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Logging is used instead of fmt.Print*"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Functions are small and focused"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Variable names are descriptive"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Comments explain intent, not implementation"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No code duplication"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Security considerations addressed"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Performance impact considered"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"tools-and-automation",children:"Tools and Automation"}),"\n",(0,r.jsx)(n.h3,{id:"required-tools",children:"Required Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pre-commit"})," - Automation of running all code quality checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"golangci-lint"})," - Code quality checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mockery"})," - Mock generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"make"})," - Build automation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"pre-commit-workflow",children:"Pre-commit Workflow"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"make test-all"})," before committing"]}),"\n",(0,r.jsx)(n.li,{children:"This includes formatting, linting, and testing"}),"\n",(0,r.jsx)(n.li,{children:"Fix any issues before pushing code"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsx)(n.p,{children:"If you have questions about coding standards:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Check this document first"}),"\n",(0,r.jsx)(n.li,{children:"Review existing code for examples"}),"\n",(0,r.jsx)(n.li,{children:"Open an issue for clarification"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Remember: ",(0,r.jsx)(n.strong,{children:"Good code is readable, maintainable, and follows established patterns. When in doubt, prioritize clarity over cleverness."})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);