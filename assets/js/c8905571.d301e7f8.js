"use strict";(self.webpackChunkwhaletui_docs=self.webpackChunkwhaletui_docs||[]).push([[731],{7052:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"concepts/nodes","title":"Docker Swarm Nodes","description":"Understanding Docker Swarm nodes and node management in WhaleTUI","source":"@site/docs/concepts/nodes.md","sourceDirName":"concepts","slug":"/concepts/nodes","permalink":"/whaletui/docs/concepts/nodes","draft":false,"unlisted":false,"editUrl":"https://github.com/wikczerski/whaletui/edit/main/docs/docs/concepts/nodes.md","tags":[],"version":"current","frontMatter":{"id":"nodes","title":"Docker Swarm Nodes","sidebar_label":"Nodes","description":"Understanding Docker Swarm nodes and node management in WhaleTUI"},"sidebar":"docs","previous":{"title":"Swarm","permalink":"/whaletui/docs/concepts/swarm"},"next":{"title":"Column Configuration","permalink":"/whaletui/docs/concepts/column-configuration"}}');var r=s(4848),o=s(8453);const a={id:"nodes",title:"Docker Swarm Nodes",sidebar_label:"Nodes",description:"Understanding Docker Swarm nodes and node management in WhaleTUI"},d="Docker Swarm Nodes",t={},l=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"What are Swarm Nodes?",id:"what-are-swarm-nodes",level:2},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Node Types",id:"node-types",level:2},{value:"Manager Nodes",id:"manager-nodes",level:3},{value:"Worker Nodes",id:"worker-nodes",level:3},{value:"Node Management in WhaleTUI",id:"node-management-in-whaletui",level:2},{value:"Node List View",id:"node-list-view",level:3},{value:"Node Details",id:"node-details",level:3},{value:"Common Node Operations",id:"common-node-operations",level:2},{value:"Initializing Swarm",id:"initializing-swarm",level:3},{value:"Managing Node Roles",id:"managing-node-roles",level:3},{value:"Updating Node Availability",id:"updating-node-availability",level:3},{value:"Removing Nodes",id:"removing-nodes",level:3},{value:"Node Configuration",id:"node-configuration",level:2},{value:"Network Configuration",id:"network-configuration",level:3},{value:"Security Configuration",id:"security-configuration",level:3},{value:"Resource Configuration",id:"resource-configuration",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Cluster Design",id:"cluster-design",level:3},{value:"Node Management",id:"node-management",level:3},{value:"Security",id:"security",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Node Communication Problems",id:"node-communication-problems",level:4},{value:"Node Availability Issues",id:"node-availability-issues",level:4},{value:"Resource Problems",id:"resource-problems",level:4},{value:"Node Diagnostics",id:"node-diagnostics",level:3},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"Node Labels and Constraints",id:"node-labels-and-constraints",level:3},{value:"Node Drain and Maintenance",id:"node-drain-and-maintenance",level:3},{value:"Multi-Architecture Support",id:"multi-architecture-support",level:3},{value:"Integration with WhaleTUI",id:"integration-with-whaletui",level:2},{value:"Keyboard Shortcuts",id:"keyboard-shortcuts",level:3},{value:"Available Actions",id:"available-actions",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"docker-swarm-nodes",children:"Docker Swarm Nodes"})}),"\n",(0,r.jsx)(n.p,{children:"Docker Swarm nodes are the individual Docker hosts that form a cluster. Each node can be either a manager node (responsible for cluster management) or a worker node (responsible for running containers)."}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#what-are-swarm-nodes",children:"What are Swarm Nodes?"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#node-types",children:"Node Types"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#node-management-in-whaletui",children:"Node Management in WhaleTUI"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#common-node-operations",children:"Common Node Operations"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#node-configuration",children:"Node Configuration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#troubleshooting",children:"Troubleshooting"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-are-swarm-nodes",children:"What are Swarm Nodes?"}),"\n",(0,r.jsx)(n.p,{children:"Swarm nodes are individual Docker hosts that participate in a Docker Swarm cluster. Each node runs the Docker Engine and participates in the cluster's distributed system. Nodes can be physical machines, virtual machines, or cloud instances."}),"\n",(0,r.jsx)(n.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cluster Membership"}),": Nodes join the swarm and become part of the cluster"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Role Assignment"}),": Nodes are assigned either manager or worker roles"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Sharing"}),": Nodes contribute their resources to the cluster"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Health Monitoring"}),": Nodes report their status and health to the swarm"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Load Distribution"}),": Work is distributed across available nodes"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"node-types",children:"Node Types"}),"\n",(0,r.jsx)(n.h3,{id:"manager-nodes",children:"Manager Nodes"}),"\n",(0,r.jsx)(n.p,{children:"Manager nodes are responsible for cluster management and orchestration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Manager node responsibilities\n- Maintain cluster state\n- Schedule services\n- Handle API requests\n- Participate in Raft consensus\n- Manage cluster membership\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Characteristics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Consensus"}),": Participate in Raft consensus for cluster state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scheduling"}),": Make decisions about service placement"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API"}),": Handle client requests and cluster operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Leadership"}),": One manager serves as the leader"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reachability"}),": Other managers must be reachable"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"worker-nodes",children:"Worker Nodes"}),"\n",(0,r.jsx)(n.p,{children:"Worker nodes execute tasks and run containers:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Worker node responsibilities\n- Execute assigned tasks\n- Run containers\n- Report status\n- Provide resources\n- Handle service requests\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Characteristics:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Task Execution"}),": Run containers assigned by managers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Provision"}),": Provide CPU, memory, and storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Status Reporting"}),": Report health and status to managers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No Consensus"}),": Do not participate in cluster decisions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"}),": Can be easily added or removed"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"node-management-in-whaletui",children:"Node Management in WhaleTUI"}),"\n",(0,r.jsx)(n.p,{children:"WhaleTUI provides comprehensive tools for managing Docker Swarm nodes through an intuitive terminal interface."}),"\n",(0,r.jsx)(n.h3,{id:"node-list-view",children:"Node List View"}),"\n",(0,r.jsx)(n.p,{children:"View all nodes in the cluster with key information:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 WhaleTUI - Swarm Nodes                                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 ID           HOSTNAME      STATUS    AVAILABILITY    MANAGER STATUS        \u2502\n\u2502 abc123...    manager-1     Ready     Active          Leader                \u2502\n\u2502 def456...    manager-2     Ready     Active          Reachable             \u2502\n\u2502 ghi789...    worker-1      Ready     Active          -                     \u2502\n\u2502 jkl012...    worker-2      Ready     Active          -                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h3,{id:"node-details",children:"Node Details"}),"\n",(0,r.jsx)(n.p,{children:"Inspect node configuration and status:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Node ID"}),": Unique identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hostname"}),": Node's hostname"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Status"}),": Current node status (Ready, Down, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Availability"}),": Node availability (Active, Pause, Drain)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Manager Status"}),": Role in manager consensus (Leader, Reachable, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Engine Version"}),": Docker Engine version"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resources"}),": CPU, memory, and storage capacity"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-node-operations",children:"Common Node Operations"}),"\n",(0,r.jsx)(n.h3,{id:"initializing-swarm",children:"Initializing Swarm"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Initialize swarm on first manager\ndocker swarm init --advertise-addr 192.168.1.100\n\n# Join worker node to swarm\ndocker swarm join --token SWMTKN-1-... 192.168.1.100:2377\n\n# Join manager node to swarm\ndocker swarm join --token SWMTKN-1-... 192.168.1.100:2377\n"})}),"\n",(0,r.jsx)(n.h3,{id:"managing-node-roles",children:"Managing Node Roles"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Promote worker to manager\ndocker node promote worker-1\n\n# Demote manager to worker\ndocker node demote manager-2\n\n# Check node role\ndocker node inspect node-name | grep -i role\n"})}),"\n",(0,r.jsx)(n.h3,{id:"updating-node-availability",children:"Updating Node Availability"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Set node to drain (stop accepting new tasks)\ndocker node update --availability drain worker-1\n\n# Set node to pause (pause existing tasks)\ndocker node update --availability pause worker-1\n\n# Set node to active (normal operation)\ndocker node update --availability active worker-1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"removing-nodes",children:"Removing Nodes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Remove node from swarm\ndocker swarm leave --force\n\n# Force remove node\ndocker node rm --force node-name\n"})}),"\n",(0,r.jsx)(n.h2,{id:"node-configuration",children:"Node Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"network-configuration",children:"Network Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Specify advertise address\ndocker swarm init --advertise-addr 192.168.1.100\n\n# Use specific port\ndocker swarm init --advertise-addr 192.168.1.100:2377\n\n# Listen on all interfaces\ndocker swarm init --advertise-addr 0.0.0.0\n"})}),"\n",(0,r.jsx)(n.h3,{id:"security-configuration",children:"Security Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable TLS encryption\ndocker swarm init \\\n  --advertise-addr 192.168.1.100 \\\n  --cert-expiry 2160h \\\n  --external-ca external-ca.pem\n\n# Use custom CA\ndocker swarm init \\\n  --advertise-addr 192.168.1.100 \\\n  --ca-cert ca.pem \\\n  --ca-key ca-key.pem\n"})}),"\n",(0,r.jsx)(n.h3,{id:"resource-configuration",children:"Resource Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Set resource limits\ndocker node update \\\n  --label-add memory=8g \\\n  --label-add cpu=4 \\\n  worker-1\n\n# Add custom labels\ndocker node update \\\n  --label-add environment=production \\\n  --label-add team=backend \\\n  worker-1\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"cluster-design",children:"Cluster Design"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Manager Nodes"}),": Use odd number (3, 5, 7) for consensus"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Worker Distribution"}),": Distribute workload evenly across workers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Planning"}),": Plan for resource requirements and scaling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Design"}),": Ensure reliable network connectivity between nodes"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"node-management",children:"Node Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Role Separation"}),": Keep manager and worker roles separate"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Monitoring"}),": Monitor node resource usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Health Checks"}),": Implement node health monitoring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backup Strategy"}),": Backup manager node configurations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TLS Encryption"}),": Enable TLS for node communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Access Control"}),": Limit access to manager nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular Updates"}),": Keep Docker Engine updated"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Security"}),": Implement network segmentation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Usage"}),": Track CPU, memory, and storage usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Health Status"}),": Monitor node health and availability"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance Metrics"}),": Track node performance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alerting"}),": Set up alerts for critical issues"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(n.h4,{id:"node-communication-problems",children:"Node Communication Problems"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check node status\ndocker node ls\n\n# Inspect node details\ndocker node inspect node-name\n\n# Check network connectivity\nping node-ip-address\n\n# Verify swarm tokens\ndocker swarm join-token manager\ndocker swarm join-token worker\n"})}),"\n",(0,r.jsx)(n.h4,{id:"node-availability-issues",children:"Node Availability Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check node availability\ndocker node inspect node-name | grep -i availability\n\n# Update node availability\ndocker node update --availability active node-name\n\n# Check for paused tasks\ndocker node ps node-name\n"})}),"\n",(0,r.jsx)(n.h4,{id:"resource-problems",children:"Resource Problems"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Check node resources\ndocker node inspect node-name | grep -A 10 "Status"\n\n# Check resource usage\ndocker system df\n\n# Monitor node performance\ndocker stats --no-stream\n'})}),"\n",(0,r.jsx)(n.h3,{id:"node-diagnostics",children:"Node Diagnostics"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Check swarm status\ndocker info | grep -A 10 "Swarm"\n\n# View swarm logs\nsudo journalctl -u docker.service | grep swarm\n\n# Inspect swarm configuration\ndocker swarm inspect\n\n# Check cluster health\ndocker node ls --format "table {{.ID}}\\t{{.Hostname}}\\t{{.Status}}\\t{{.Availability}}"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,r.jsx)(n.h3,{id:"node-labels-and-constraints",children:"Node Labels and Constraints"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Add node labels\ndocker node update \\\n  --label-add environment=production \\\n  --label-add datacenter=us-east \\\n  worker-1\n\n# Use labels in service constraints\ndocker service create \\\n  --name web \\\n  --constraint 'node.labels.environment==production' \\\n  nginx:latest\n"})}),"\n",(0,r.jsx)(n.h3,{id:"node-drain-and-maintenance",children:"Node Drain and Maintenance"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Drain node for maintenance\ndocker node update --availability drain worker-1\n\n# Check drained tasks\ndocker node ps worker-1\n\n# Re-enable node after maintenance\ndocker node update --availability active worker-1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multi-architecture-support",children:"Multi-Architecture Support"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check node architecture\ndocker node inspect node-name | grep -i architecture\n\n# Deploy multi-arch services\ndocker service create \\\n  --name multiarch \\\n  --constraint 'node.arch==x86_64' \\\n  nginx:latest\n"})}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-whaletui",children:"Integration with WhaleTUI"}),"\n",(0,r.jsx)(n.p,{children:"WhaleTUI seamlessly integrates node management with other Docker operations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Management"}),": Deploy services with node constraints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Configuration"}),": Use overlay networks across nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Volume Management"}),": Configure volumes accessible to specific nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Image Management"}),": Ensure images are available on target nodes"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"keyboard-shortcuts",children:"Keyboard Shortcuts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:":nodes"})," - Switch to Swarm Nodes view"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Enter"})," - Inspect selected node"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"i"})," - Inspect selected node"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ESC"})," - Close modal or go back"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Node management in WhaleTUI currently focuses on viewing and inspecting nodes. For promoting, demoting, and updating node availability, use the Docker CLI directly."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"available-actions",children:"Available Actions"}),"\n",(0,r.jsx)(n.p,{children:"Use keyboard shortcuts and navigation for quick access to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Node inspection and details"}),"\n",(0,r.jsx)(n.li,{children:"Viewing node information"}),"\n",(0,r.jsx)(n.li,{children:"Service management (via Docker CLI)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/whaletui/docs/concepts/swarm",children:"Swarm"})," - Learn about Docker Swarm orchestration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/whaletui/docs/concepts/containers",children:"Containers"})," - Deploy containers across nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/whaletui/docs/concepts/networks",children:"Networks"})," - Configure overlay networks for nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/whaletui/docs/concepts/volumes",children:"Volumes"})," - Manage persistent storage across nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/whaletui/docs/development/setup",children:"Development Setup"})," - Set up your development environment"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var i=s(6540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);