name: Manual Documentation Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'github-pages'
        type: choice
        options:
        - github-pages

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages-manual"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch full history for better git info
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('docs/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd docs
          npm install

      - name: Build documentation
        run: |
          cd docs
          npm run build


  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy to GitHub Pages
        run: |
          # Remove existing gh-pages branch if it exists
          git branch -D gh-pages 2>/dev/null || true

          # Create new orphaned gh-pages branch
          git checkout --orphan gh-pages

          # Remove all files from staging
          git rm -rf . || true

          # Copy built files
          cp -r docs/build/* .

          # Add all files
          git add .

          # Create .nojekyll file
          touch .nojekyll
          git add .nojekyll

          # Create CNAME file
          echo "wikczerski.github.io" > CNAME
          git add CNAME

          # Commit and push
          git commit -m "Deploy documentation from commit ${{ github.sha }}"
          git push -f origin gh-pages
